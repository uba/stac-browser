{"version":3,"file":"js/4527.0577cbe4.js","mappings":"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","sources":["webpack://@radiantearth/stac-browser/./node_modules/@kurkle/color/dist/color.esm.js","webpack://@radiantearth/stac-browser/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://@radiantearth/stac-browser/./node_modules/chart.js/dist/chart.js","webpack://@radiantearth/stac-browser/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.4.7\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.7\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\nimport { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onUnmounted, watch, nextTick, h } from 'vue';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst A11yProps = {\n    ariaLabel: {\n        type: String\n    },\n    ariaDescribedby: {\n        type: String\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    destroyDelay: {\n        type: Number,\n        default: 0 // No delay by default\n    },\n    ...CommonProps,\n    ...A11yProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose , slots  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                if (props.destroyDelay > 0) {\n                    setTimeout(()=>{\n                        chart.destroy();\n                        chartRef.value = null;\n                    }, props.destroyDelay);\n                } else {\n                    chart.destroy();\n                    chartRef.value = null;\n                }\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onUnmounted(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                nextTick(()=>{\n                    update(chart);\n                });\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                role: \"img\",\n                ariaLabel: props.ariaLabel,\n                ariaDescribedby: props.ariaDescribedby,\n                ref: canvasRef\n            }, [\n                h(\"p\", {}, [\n                    slots.default ? slots.default() : \"\"\n                ])\n            ]);\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","unclipArea","setRenderOpts","opts","translation","fillStyle","textAlign","textBaseline","decorateText","line","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","add","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","getValue","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","meta","count","iScale","_parsing","parsed","parse","EPSILON","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_chart","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","convertObjectDataToArray","vScale","iAxisKey","axis","vAxisKey","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForValue","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","PieController","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","skip","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","borderDashOffset","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","containsColorsDefinition","containsDefaultColorsDefenitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","_element","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","boxWidth","boxHeight","bodyFont","titleFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","rtlHelper","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","usePointStyle","drawOptions","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","textDirection","positionChanged","_positionChanged","_ignoreReplayEvents","handleEvent","plugin_tooltip","afterInit","afterDraw","afterEvent","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","CommonProps","required","default","datasetIdKey","updateMode","A11yProps","ariaLabel","ariaDescribedby","Props","destroyDelay","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","cloneData","nextData","setup","param","expose","slots","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","role","ref","createTypedChart","registerables","reforwardRef","Bar","Pie"],"sourceRoot":""}